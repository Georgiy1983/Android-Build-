 name: Build Kivy APK - Fixed Dependencies

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04 # Явно указываем версию Ubuntu
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install essential build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          software-properties-common \
          build-essential \
          git \
          zip \
          unzip \
          curl \
          wget

    - name: Install Java JDK 17
      run: |
        sudo apt-get install -y openjdk-17-jdk
        echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-$(dpkg --print-architecture)" >> $GITHUB_ENV

    - name: Install Android build dependencies
      run: |
        sudo apt-get install -y \
          autoconf \
          automake \
          libtool \
          pkg-config \
          cmake \
          ninja-build \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo6 \          # Правильное имя пакета
          libffi-dev \
          libssl-dev \
          libjpeg-dev \
          libpng-dev \
          libsqlite3-dev \
          libreadline-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install cython==0.29.33
        pip install buildozer
        pip install kivy

    - name: Create minimal buildozer.spec if not exists
      run: |
        if [ ! -f buildozer.spec ]; then
          echo "[app]
title = My Kivy App
package.name = myapp
package.domain = org.test
source.dir = .
source.include_exts = py,png,jpg,kv,atlas
version = 1.0
requirements = python3,kivy
orientation = portrait" > buildozer.spec
        fi

    - name: Build APK with verbose output
      run: |
        buildozer -v android debug 2>&1 | tee build.log

    - name: Check if APK was created
      run: |
        if [ -f bin/*.apk ]; then
          echo "APK successfully created!"
          ls -la bin/
        else
          echo "APK not found. Checking build directory:"
          ls -la .buildozer/android/platform/build-*/dists/*/build/outputs/apk/ || true
          exit 1
        fi

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: |
          bin/*.apk
          .buildozer/android/platform/build-*/dists/*/build/outputs/apk/*.apk

    - name: Upload build logs for debugging
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-logs
        path: |
          build.log
          .buildozer